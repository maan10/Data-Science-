# -*- coding: utf-8 -*-
"""With the help of json model and load .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EDBIC2lEs9qWtkEVReQ5pqD0HnTRM_uz
"""

pip install h5py

from keras.models import Sequential
from keras.layers import Dense
from keras.models import model_from_json
import numpy
import os

# fix random seed for reproducibility
numpy.random.seed(7)

# load pima indians dataset
dataset = numpy.loadtxt("/content/drive/MyDrive/data/pima-indians-diabetes.csv", delimiter=",")

dataset

X = dataset[:,0:8]
Y = dataset[:,8]

# create model

model = Sequential()
model.add(Dense(12, input_dim=8, activation='relu'))
model.add(Dense(8, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

# Compile model
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

model.fit(X, Y, epochs=150, batch_size=10, verbose=0)

scores = model.evaluate(X, Y, verbose=0)

print("%s: %.2f%%" % (model.metrics_names[1], scores[1]*100))

# serialize model to JSON
model_json = model.to_json()
with open("/content/drive/MyDrive/data/model.json", "w") as json_file:
    json_file.write(model_json)

# serialize weights to HDF5
model.save_weights("/content/drive/MyDrive/data/model.h5")
print("Saved model to disk")

from keras.models import model_from_json
json_file = open('/content/drive/MyDrive/data/model.json', 'r')
loaded_model_json = json_file.read()
json_file.close()
loaded_model = model_from_json(loaded_model_json)

import numpy 
# load weights into new model
loaded_model.load_weights("/content/drive/MyDrive/data/model.h5")
print("Loaded model from disk")

# load pima indians dataset
dataset = numpy.loadtxt("/content/drive/MyDrive/data/pima-indians-diabetes.csv", delimiter=",")
X = dataset[:,0:8]
Y = dataset[:,8]
# evaluate loaded model on test data
loaded_model.compile(loss='binary_crossentropy', optimizer='rmsprop', metrics=['accuracy'])
score = loaded_model.evaluate(X, Y, verbose=0)
print("%s: %.2f%%" % (loaded_model.metrics_names[1], score[1]*100))

"""Reference:

https://machinelearningmastery.com/save-load-keras-deep-learning-models/
"""

